name: Build

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  linux:
    name: Build (${{ matrix.os }}, OTP-${{ matrix.otp_version }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        otp_version: [23]
        os: [ubuntu-latest]

    container:
      image: erlang:${{ matrix.otp_version }}

    env:
      STOCKFISH_VERSION: 10

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Stockfish
      run: |
        rm -fr ${HOME}/stockfish-${STOCKFISH_VERSION}-linux
        rm -f ${HOME}/stockfish-${STOCKFISH_VERSION}-linux.zip
        curl https://stockfishchess.org/files/stockfish-${STOCKFISH_VERSION}-linux.zip -o ${HOME}/stockfish-${STOCKFISH_VERSION}-linux.zip
        unzip ${HOME}/stockfish-${STOCKFISH_VERSION}-linux.zip -d ${HOME}
        chmod +x ${HOME}/stockfish-${STOCKFISH_VERSION}-linux/Linux/stockfish_${STOCKFISH_VERSION}_x64
    - name: Cache Dialyzer PLTs
      uses: actions/cache@v2
      with:
        path: ~/.cache/rebar3/rebar3_*_plt
        key: ${{ runner.os }}-dialyzer-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.config')) }}
        restore-keys: |
          ${{ runner.os }}-dialyzer-
    - name: Cache Hex packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/rebar3/hex/hexpm/packages
        key: ${{ runner.os }}-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
        restore-keys: |
          ${{ runner.os }}-hex-
    - name: Compile
      run: rebar3 compile
    - name: CT tests
      env:
        UCI_ENGINE_PATH: ${HOME}/stockfish-${STOCKFISH_VERSION}-linux/Linux/stockfish_${STOCKFISH_VERSION}_x64
      run: rebar3 ct
    - name: Dialyzer
      run: rebar3 dialyzer
    - name: Code coverage
      run: rebar3 cover
    - name: Generate coverage report
      run: rebar3 covertool generate
    - name: Upload coverage to Codecov
      run: bash <(curl -s https://codecov.io/bash) -f _build/test/covertool/binbo.covertool.xml
